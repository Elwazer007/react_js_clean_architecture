{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { itemSlice } from \"./item/item.slice\";\nexport var store = configureStore({\n  reducer: {\n    items: itemSlice.reducer\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["C:/Users/63997/Documents/Projects/Wela/nextjs-blog/src/app/redux/store.ts"],"names":["configureStore","itemSlice","store","reducer","items"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAEA,OAAO,IAAMC,KAAK,GAAGF,cAAc,CAAC;AAChCG,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAEH,SAAS,CAACE;AADZ;AADuB,CAAD,CAA5B,C,CAMP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport {itemSlice} from \"./item/item.slice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        items: itemSlice.reducer\r\n    },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch"]},"metadata":{},"sourceType":"module"}